inspectit:
  metrics:
    definitions:
      writeAttachment:
        unit: invocations
        views:
          writeAttachment:
            aggregation: COUNT
            tags: {target: true, firstVal: true, secondVal: true}
      readAttachment:
        unit: invocations
        views:
          readAttachment:
            aggregation: COUNT
            tags: {target: true, firstVal: true, secondVal: true}

  instrumentation:
    scopes:
      ObjectAttachmentsTest-writeAttachments:
        type: { name: ObjectAttachmentsTest, matcher-mode: ENDS_WITH}
        methods: [{name: writeAttachments}]
      ObjectAttachmentsTest-readAttachments:
        type: { name: ObjectAttachmentsTest, matcher-mode: ENDS_WITH}
        methods: [{name: readAttachments}]



    rules:
      ObjectAttachmentsTest-writeAttachments:
        scopes: { ObjectAttachmentsTest-writeAttachments: true }
        entry:
          target:
            action: set
            data-input: {value: _arg0}
          firstVal:
            action: replace_attachment
            constant-input: {key: "first"}
            data-input: {target: _arg0, value: _arg1}

          secondVal:
            action: replace_attachment
            constant-input: {key: "second"}
            data-input: {target: _arg0, value: _arg2}
        metrics:
          writeAttachment:
            value: 1
            data-tags: {target: target, firstVal: firstVal, secondVal: secondVal}


      ObjectAttachmentsTest-readAttachments:
        scopes: { ObjectAttachmentsTest-readAttachments: true }
        entry:
          target:
            action: set
            data-input: {value: _arg0}
          firstVal:
            action: read_attachment
            constant-input: {key: "first"}
            data-input: {target: _arg0}

          secondVal:
            action: read_attachment
            constant-input: {key: "second"}
            data-input: {target: _arg0}
        metrics:
          readAttachment:
            value: 1
            data-tags: {target: target, firstVal: firstVal, secondVal: secondVal}
