inspectit:
  instrumentation:
    actions:
    
      # Checks if a given ServletRequest is an instance of HttpServletRequest
      'a_servletrequest_isHttp':
        imports:
          - javax.servlet
          - javax.servlet.http
        input:
          'request': ServletRequest
        value: 'Boolean.valueOf(request instanceof HttpServletRequest)'
      
      # Extracts the request path from the HttpServletRequest
      'a_httpservletrequest_getPath':
        imports:
          - javax.servlet.http
        input:
          'request': HttpServletRequest
        value: 'java.net.URI.create(request.getRequestURI()).getPath()'

      # Extracts the method path from the HttpServletRequest
      'a_httpservletrequest_getMethod':
        imports:
          - javax.servlet.http
        input:
          'request': HttpServletRequest
        value: 'request.getMethod()'

      # Extracts the response status from the given HttpServletResponse
      'a_httpservletresponse_getStatus':
        imports:
          - javax.servlet.http
        input:
          'response': HttpServletResponse
        value: 'Integer.valueOf(response.getStatus())'

      # Reads down-propagated data from the request HTTP Headers
      'a_servletapi_downPropagation':
        is-void: true
        imports:
          - java.util
          - javax.servlet
          - javax.servlet.http
        input:
          '_arg0': 'ServletRequest'
          '_context': 'InspectitContext'
        value-body: |
          if (_arg0 instanceof HttpServletRequest) {
            HttpServletRequest req = (HttpServletRequest) _arg0;
            Collection headerKeys = _context.getPropagationHeaderNames();
            Map presentHeaders = new HashMap();
            Iterator it = headerKeys.iterator();
            while (it.hasNext()) {
              String name = (String) it.next();
              java.util.Enumeration values = req.getHeaders(name);
              if (values != null && values.hasMoreElements()) {
                presentHeaders.put(name, String.join(",", Collections.list(values)));
              }
            }
            _context.readDownPropagationHeaders(presentHeaders);
          }

      # Writes up-propagated data to the response HTTP Headers
      'a_servletapi_upPropagation':
        is-void: true
        imports:
          - java.util
          - javax.servlet
          - javax.servlet.http
        input:
          'response': 'ServletResponse'
          '_context': 'InspectitContext'
        value-body: |
          if (response instanceof HttpServletResponse) {
            HttpServletResponse res = (HttpServletResponse) response;
            if (!res.isCommitted()) {
              Map headers = _context.getUpPropagationHeaders();
              Iterator it = headers.entrySet().iterator();
              while (it.hasNext()) {
                Map$Entry e = (Map$Entry) it.next();
                res.setHeader((String) e.getKey(), (String) e.getValue());
              }
            }
          }
