
plugins {
    id "me.champeau.gradle.jmh" version "0.4.7"
}

/**
 * JMH-Perf tests.
 */
jmhJar {
    doFirst {
        duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    }
}
jmh {
    /**
     * Use -PjmhInclude='regular expression' to specify what tests to run with JMH.
     */
    if (project.hasProperty('jmhInclude')) {
        def regex = project.getProperty('jmhInclude')
        println "Filtering for JMH-Tests matching to regex " + regex
        include = [regex]
    }
    humanOutputFile = file("$buildDir/jmh/human.txt")
    resultsFile = file("$buildDir/jmh/results.txt")
    duplicateClassesStrategy = DuplicatesStrategy.EXCLUDE
    jmhVersion = '1.21'
}

configurations{
    opencensus
}

dependencies {
    compileOnly(
            project(':inspectit-oce-bootstrap'),
            "io.opencensus:opencensus-api:${openCensusVersion}"
    )

    opencensus(
            "io.opencensus:opencensus-impl:${openCensusVersion}"
    )

    implementation(
            'org.springframework.boot:spring-boot:2.1.1.RELEASE',
            'org.yaml:snakeyaml:1.23',
            'javax.validation:validation-api:2.0.0.Final',
            'ch.qos.logback:logback-classic:1.2.3'
    )
}

task buildOpencensusFatJar(type: Jar) {
    archiveName = "opencensus-fat.jar"
    destinationDir = file("$buildDir/jarGen")
    from {
        configurations.opencensus.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

jar {
    archivesBaseName = "${project.name}"

    //include the open-census dependencies as a fat jar
    dependsOn buildOpencensusFatJar
    from "$buildDir/jarGen"

    //include all "implementation" dependencies in fat jar
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
