plugins {
	id 'org.springframework.boot' version '2.1.4.RELEASE'
	id 'java'
	id "com.moowork.grunt" version "1.2.0"
	id "de.undercouch.download" version "4.0.0"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'de.undercouch.download'
apply plugin: 'com.moowork.grunt'

group = 'rocks.inspectit.oce'
version = '0.0.1-SNAPSHOT'
def boomerangVersion = '1.650.0'
sourceCompatibility = '1.8'

bootJar {
	archivesBaseName = 'inspectit-ocelot-eum-server'
	version = "${buildVersion}"

	manifest {
		attributes 'Start-Class': 'rocks.inspectit.oce.eum.server.EUMServerApplication'
	}
}

node {
	nodeModulesDir = file("${project.buildDir}/boomerang-${boomerangVersion}")
	version = '10.16.0'
}

grunt {
	workDir = file("${project.buildDir}/boomerang-${boomerangVersion}")
	bufferOutput = true
}


dependencies {
	implementation(
			project(':inspectit-ocelot-config'),
			"org.springframework.boot:spring-boot-starter-web",
			"org.springframework.security:spring-security-web:5.1.5.RELEASE",
			"io.opencensus:opencensus-api:${openCensusVersion}",
			"io.opencensus:opencensus-impl:${openCensusVersion}",
			"io.prometheus:simpleclient_httpserver:${prometheusClientVersion}",
			"io.opencensus:opencensus-exporter-stats-prometheus:${openCensusVersion}",
			'com.maxmind.geoip2:geoip2:2.12.0',
			'commons-net:commons-net:3.3',
			'org.springframework.boot:spring-boot-starter-actuator'
	)
	compileOnly "org.projectlombok:lombok:1.18.4"
	annotationProcessor "org.projectlombok:lombok:1.18.4"
	testImplementation(
			project(':inspectit-ocelot-config'),
			"org.springframework.boot:spring-boot-starter-test",
			"io.opencensus:opencensus-impl:${openCensusVersion}",
			'org.springframework:spring-test:5.1.3.RELEASE',
			'org.apache.httpcomponents:httpclient:4.5.6',
			'org.mockito:mockito-core:2.23.4',
			'org.junit.jupiter:junit-jupiter-api:5.3.1',
			'org.mockito:mockito-junit-jupiter:2.23.0'
	)
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.1"
}

task downloadZipFile(type: Download) {
	src "https://github.com/akamai/boomerang/archive/${boomerangVersion}.zip"
	dest new File(buildDir, 'boomerang-source.zip')
	overwrite false
}

task downloadAndUnzipFile(dependsOn: downloadZipFile, type: Copy) {
	from zipTree(downloadZipFile.dest)
	into project.buildDir
}



task addBoomerangArtifacts(dependsOn: grunt_build, type: Copy) {
	from ("$buildDir/boomerang-${boomerangVersion}/build"){
		include "plugins/**"
		include "**/*.js"
		include "**/*.gz"
		exclude '**/*.map', 'snippets/**'
		rename "1.0.0", "${boomerangVersion}"
	}
	into "$project.projectDir/src/main/resources/static/boomerang"
}

clean {
	delete "$project.projectDir/src/main/resources/static/boomerang"
}

npmInstall.dependsOn downloadAndUnzipFile
grunt_build.dependsOn npmInstall
compileJava.dependsOn addBoomerangArtifacts
